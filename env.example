# UEX Multi-User Discord Bot Environment Variables
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to git - it contains sensitive credentials

# =============================================================================
# DISCORD CONFIGURATION (Required)
# =============================================================================

# Your Discord bot token from the Discord Developer Portal
# Create a bot at: https://discord.com/developers/applications
# Enable "Message Content Intent" under Privileged Gateway Intents
# Invite the bot to at least one Discord server (required for DMs)
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# =============================================================================
# SECURITY CONFIGURATION (Required)
# =============================================================================

# Encryption key for securing user credentials (REQUIRED)
# Generate a random 32+ character string for this
# This encrypts ALL user credentials with AES-256-GCM encryption
# Examples:
# - UEX_Bot_Secure_2024_Encryption_Key_123
# - a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8
USER_ENCRYPTION_KEY=your_random_32_character_encryption_key_here

# =============================================================================
# SERVER CONFIGURATION (Optional)
# =============================================================================

# Port for the Express server (usually set automatically by hosting platform)
# PORT=3000

# Application environment
# NODE_ENV=production

# Enable/disable detailed logging (set to 'false' to reduce log output)
# ENABLE_LOGGING=true

# Persistent data directory (for platforms with persistent disk storage)
# If not set, uses working directory. For Render persistent disks, use the mount path
# Example: PERSISTENT_DATA_DIR=/var/data
# PERSISTENT_DATA_DIR=

# =============================================================================
# UEX API CONFIGURATION (Optional - for webhook validation)
# =============================================================================

# Secret for validating incoming UEX webhooks (optional but recommended)
# Set this in your UEX webhook configuration as well
# If not set, webhook signature validation will be skipped
UEX_WEBHOOK_SECRET=your_webhook_secret_for_signature_validation

# =============================================================================
# MULTI-USER SETUP INSTRUCTIONS
# =============================================================================

# This bot serves MULTIPLE USERS from one deployment:

# 1. Admin Setup (You):
#    - Create Discord bot at https://discord.com/developers/applications
#    - Enable "Message Content Intent" under Privileged Gateway Intents
#    - Copy bot token and set as DISCORD_BOT_TOKEN above
#    - Generate a secure 32+ character encryption key
#    - Deploy to hosting platform (Render, Railway, or any Node.js host)
#    - Invite bot to Discord servers or share invite link

# 2. User Registration (Each User):
#    - Each user runs: /register api_token:their_token secret_key:their_secret
#    - Their credentials are encrypted and stored securely
#    - Each user configures their own UEX webhooks

# 3. User Privacy Options:
#    - Private Discord server (user creates own server, invites only bot)
#    - Private channels in existing servers
#    - Ephemeral commands in shared servers

# =============================================================================
# HOSTING PLATFORM EXAMPLES
# =============================================================================

# Deploy this multi-user bot on free hosting platforms:

# Render (Recommended - Free 750 hours/month):
# - Sign up at https://render.com using your GitHub account
# - Create new web service from GitHub repository
# - Set environment variables above
# - Auto-deploys on git push
# - Automatic HTTPS and sleep/wake functionality

# Railway (Free tier available):
# - Sign up at https://railway.app
# - Import GitHub project
# - Configure environment variables
# - Automatic deployments

# Other platforms:
# - Any Node.js hosting platform with environment variable support
# - VPS with Node.js 18+ support

# =============================================================================
# SECURITY FEATURES
# =============================================================================

# This bot provides bank-level security:
# - AES-256-GCM encryption for all user credentials
# - Complete user isolation (users can only access their own data)
# - File-based encrypted storage (no database required)
# - Optional webhook signature validation
# - Comprehensive security logging
# - Discord permission-based privacy controls

# =============================================================================
# IMPORTANT SECURITY NOTES
# =============================================================================

# ⚠️  NEVER commit real credentials to git/GitHub
# ⚠️  Set real values ONLY in your hosting platform's environment variables
# ⚠️  Use a strong, random USER_ENCRYPTION_KEY (32+ characters)
# ⚠️  Keep your Discord bot token secure - treat it like a password
# ⚠️  Each user's credentials are encrypted separately and isolated
# ⚠️  Use HTTPS for all webhook endpoints (hosting platforms provide this)

# =============================================================================
# TESTING YOUR DEPLOYMENT
# =============================================================================

# After deployment:
# 1. Visit https://your-bot-domain.com/health (should return bot status)
# 2. Check if Discord bot appears online in your server
# 3. Test slash commands: /admin info (for bot details)
# 4. Users can register: /register api_token:token secret_key:secret
# 5. Test UEX webhooks with your deployed webhook URL

# =============================================================================
# MULTI-USER BENEFITS
# =============================================================================

# Why this architecture is better:
# ✅ Admin deploys once, serves unlimited users
# ✅ Complete privacy options via Discord permissions
# ✅ Bank-level encryption security for all users
# ✅ Free hosting serves unlimited users forever
# ✅ Native Discord integration (buttons, embeds, commands)
# ✅ Easier maintenance and updates for everyone
# ✅ More reliable than individual deployments 